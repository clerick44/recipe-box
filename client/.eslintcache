[{"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/index.js":"1","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/App.js":"2","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/pages/MyRecipes.js":"3","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/utils/auth.js":"4","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/Footer/Footer.js":"5","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/Header/Header.js":"6","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/UserProfile/UserProfile.js":"7","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/NewRecipeForm/NewRecipeForm.js":"8","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/utils/queries.js":"9","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/Header/NavLinks.js":"10","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/RecipeCard/RecipeCard.js":"11","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/SideBar/SideBar.js":"12","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/Login/Login.js":"13","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/SignUp/SignUp.js":"14","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/utils/mutations.js":"15","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/RecipeHeader/RecipeHeader.js":"16","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/RecipeIngredients/RecipeIngredients.js":"17","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/RecipeDirections/Recipedirections.js":"18"},{"size":220,"mtime":1638738383471,"results":"19","hashOfConfig":"20"},{"size":2185,"mtime":1638932530151,"results":"21","hashOfConfig":"20"},{"size":944,"mtime":1638846994512,"results":"22","hashOfConfig":"20"},{"size":1043,"mtime":1638655874885,"results":"23","hashOfConfig":"20"},{"size":514,"mtime":1638846994494,"results":"24","hashOfConfig":"20"},{"size":1170,"mtime":1639011646881,"results":"25","hashOfConfig":"20"},{"size":1139,"mtime":1639012950791,"results":"26","hashOfConfig":"20"},{"size":7538,"mtime":1639011097889,"results":"27","hashOfConfig":"20"},{"size":2297,"mtime":1638846994513,"results":"28","hashOfConfig":"20"},{"size":277,"mtime":1638792124612,"results":"29","hashOfConfig":"20"},{"size":771,"mtime":1638846994506,"results":"30","hashOfConfig":"20"},{"size":560,"mtime":1638846994511,"results":"31","hashOfConfig":"20"},{"size":2457,"mtime":1639011646882,"results":"32","hashOfConfig":"20"},{"size":2733,"mtime":1638960191036,"results":"33","hashOfConfig":"20"},{"size":1442,"mtime":1638960191036,"results":"34","hashOfConfig":"20"},{"size":659,"mtime":1638846994510,"results":"35","hashOfConfig":"20"},{"size":485,"mtime":1638846994510,"results":"36","hashOfConfig":"20"},{"size":562,"mtime":1638846994509,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"qor3bz",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/index.js",[],["80","81"],"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/App.js",["82"],"import React, { useState } from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport MyRecipes from \"./pages/MyRecipes\";\n\nimport UserProfile from \"./components/UserProfile/UserProfile\";\nimport NewRecipe from \"./components/NewRecipeForm/NewRecipeForm\";\n\n\nimport auth from \"./utils/auth\";\nconsole.log(\"******AUTH****** \", auth.loggedIn());\n\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(\"Home\");\n\n  const renderPage = () => {\n    console.log(\"************** in RENDERPAGE ************\");\n    if (!auth.loggedIn()) {\n      return <UserProfile />;\n    }\n    if (currentPage === \"My Recipes\") {\n      return <MyRecipes />;\n    }\n    if (currentPage === \"Create Recipe\") {\n      return <NewRecipe />;\n    }\n    if (currentPage === \"Login\") {\n      return <UserProfile />;\n    }\n    // create recipe goes here\n    // return <Random />;\n  };\n\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"flex-column justify-flex-start min-100-vh\">\n        <Header currentPage={currentPage} setCurrentPage={setCurrentPage} />\n\n        <div className=\"container\"> {renderPage()}</div>\n\n        {/* <Footer /> */}\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/pages/MyRecipes.js",[],"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/utils/auth.js",[],"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/Footer/Footer.js",[],"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/Header/Header.js",["83"],"import React, { useState } from \"react\";\nimport \"./header.css\";\nimport { NavLinks } from \"./NavLinks\";\n\nconst Header = (props) => {\n  const { currentPage, setCurrentPage } = props;\n  const [clicked, setClicked] = useState(false);\n\n  const openMenu = (e) => {\n    setClicked(!clicked);\n    console.log(\"event \", e);\n  };\n  return (\n    <header>\n      <nav className=\"navbar\">\n        <h1 className=\"headerTitle\"> THE RECIPE BOOK</h1>\n        <div className=\"menuIcon\" onClick={openMenu}>\n          <i className={clicked ? \"fas fa-times\" : \"fas fa-bars\"}></i>\n        </div>\n        <ul className={clicked ? \"navMenu active\" : \"navMenu\"}>\n          {NavLinks.map((link, index) => {\n            return (\n              <li onClick={() => setCurrentPage(link.title)} key={index}>\n                <a\n                  className={\n                    link.className +\n                    \" \" +\n                    `${currentPage === link.title && \"navLinkActive\"}`\n                  }\n                >\n                  {link.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/UserProfile/UserProfile.js",["84"],"import React, { useState } from \"react\";\n// import styled from \"styled-components\";\nimport SignUp from \"../SignUp/SignUp\";\nimport Login from \"../Login/Login\";\n\nconst UserProfile = (props) => {\n//   const ButtonGroup = styled.div;\n//   const Button = styled.button;\n\n//   function Login() {\n//     const [currentPage, setCurrentPage] = useState(\"Login\");\n\n//     const renderLoginPage = () => {\n//       if (currentPage === \"Login\") {\n//         return <SignUp />;\n//       }\n//     };\n//   }\n\n//   function SignUp() {\n//     const [currentPage, setCurrentPage] = useState(\"SignUp\");\n\n//     const renderSignUpPage = () => {\n//       if (currentPage === \"SignUp\") {\n//         return <Login />;\n//       }\n//     };\n//   }\n  return (\n    <>\n    <div></div>\n    <div></div>\n    <div></div>\n      <div>\n        <Login />\n      </div>\n      <div>\n        <SignUp />\n      </div>\n    </>\n  );\n};\n\n// const ButtonGroup = styled.div;\n// const Button = styled.button;\n\nexport default UserProfile;\n\n// (\n//   <ButtonGroup>\n//     <Button onClick={SignUp}> Sign Up </Button>\n//     <Button onClick={Login}> Login </Button>\n//   </ButtonGroup>\n// );\n","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/NewRecipeForm/NewRecipeForm.js",["85","86","87"],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Button } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { TextField } from \"@mui/material\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_RECIPE } from \"../../utils/mutations\";\nimport { ConstructionOutlined } from \"@mui/icons-material\";\n\nimport \"./newRecipeForm.css\";\n\nconst NewRecipe = () => {\n  // new set form state to clear form\n  // const [formState, setFormState] = useState({\n  //   recipeName: \"\",\n  //   servings: \"\",\n  //   prepTime: \"\",\n  //   cookTime: \"\",\n  //   specialTools: \"\",\n  //   ingredients: \"\",\n  //   instructions: \"\",\n  // });\n\n  // function NewRecipe() {\n  const [inputField, setInputField] = useState([\n    {\n      recipeName: \"\",\n      servings: \"\",\n      prepTime: \"\",\n      cookTime: \"\",\n      specialTools: \"\",\n    },\n  ]);\n\n  const [inputIngredient, setInputIngredient] = useState([\n    {\n      ingredient: \"\",\n    },\n  ]);\n\n  const [inputInstruction, setInputInstruction] = useState([\n    {\n      instruction: \"\",\n    },\n  ]);\n\n  const handleChangeInputIngredient = (index, event) => {\n    console.log(index, event.target.value);\n    const values = [...inputIngredient];\n    values[index][event.target.ingredient] = event.target.value;\n    setInputIngredient(values);\n  };\n\n  const handleChangeInputInstruction = (index, event) => {\n    console.log(index, event.target.value);\n    const values = [...inputInstruction];\n    values[index][event.target.instruction] = event.target.value;\n    setInputInstruction(values);\n  };\n\n  const ingredientAddFields = () => {\n    setInputIngredient([...inputIngredient, { ingredient: \"\" }]);\n  };\n\n  const ingredientRemoveFields = (index) => {\n    const values = [...inputIngredient];\n    values.splice(index, 1);\n    setInputIngredient(values);\n  };\n\n  const instructionAddFields = () => {\n    setInputInstruction([...inputInstruction, { ingredient: \"\" }]);\n  };\n\n  const instructionRemoveFields = (index) => {\n    const values = [...inputInstruction];\n    values.splice(index, 1);\n    setInputInstruction(values);\n  };\n\n  const [addRecipe, { error, data }] = useMutation(ADD_RECIPE);\n  console.log(\"data being send to DB\", data);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    console.log(event.target.value);\n\n    setInputField({ ...inputField, [name]: value });\n    // setFormState({\n    //   ...formState,\n    //   [name]: value,\n    // });\n  };\n\n  // const handleFormSubmit = async ( e, recipeData) => {\n\n  const handleSubmit = async (e) => {\n    console.log(inputField);\n\n    e.preventDefault();\n    console.log(\"register \", inputField.recipeName);\n    console.log(\"register \", inputField.servings);\n    console.log(\"register \", inputField.prepTime);\n    console.log(\"register \", inputField.cookTime);\n    console.log(\"register \", inputField.specialTools);\n    console.log(\"register \", inputIngredient);\n    console.log(\"register \", inputInstruction);\n\n    var recipeName = inputField.recipeName;\n    var servings = inputField.servings;\n    var prepTime = inputField.prepTime;\n    var cookTime = inputField.cookTime;\n    var specialTools = inputField.specialTools;\n    var ingredients = inputIngredient;\n    var instructions = inputInstruction;\n\n    // const {\n    //   recipeName,\n    //   servings,\n    //   prepTime,\n    //   cookTime,\n    //   specialTools,\n    //   ingredients,\n    //   instructions,\n    // } = recipeData;\n    // console.log(\"data for recipe!! \", recipeData)\n\n    try {\n      console.log(\"trying to register\");\n\n      await addRecipe({\n        variables: {\n          recipeName,\n          servings,\n          cookTime,\n          prepTime,\n          specialTools,\n          ingredients,\n          instructions,\n        },\n      });\n      console.log(\"******ADDED NEW RECIPE*******\");\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  // old code Jesse\n  // const onSubmit = async (recipeData, e) => {\n  //   e.preventDefault();\n  // console.log(recipeData, e);\n  // console.log(\"register \", recipeData);\n  // const {\n  //   recipeName,\n  //   servings,\n  //   prepTime,\n  //   cookTime,\n  //   specialTools,\n  //   ingredients,\n  //   instructions,\n  // } = recipeData;\n\n  //   try {\n  //     const { data } = await addRecipe({ variables: { recipeData } });\n  //     console.log(data);\n  //     console.log(\"******ADDED NEW RECIPE*******\", recipeData);\n  //   } catch (e) {\n  //     console.error(e);\n  //   }\n  // };\n  console.log(\"********* \", inputField);\n  return (\n    <div id=\"container\">\n      <h1>Add New Recipe</h1>\n      <form>\n        <div className=\"formField\">\n          <TextField\n            name=\"recipeName\"\n            label=\"Recipe Name\"\n            value={inputField.recipeName}\n            variant=\"filled\"\n            onBlur={handleChange}\n          />\n        </div>\n\n        <div className=\"formField\">\n          <TextField\n            name=\"servings\"\n            label=\"Number of Servings\"\n            value={inputField.servings}\n            onBlur={handleChange}\n          />\n        </div>\n        <div className=\"formField\">\n          <TextField\n            name=\"prepTime\"\n            label=\"Prep Time\"\n            value={inputField.prepTime}\n            onBlur={handleChange}\n          />\n        </div>\n        <div className=\"formField\">\n          <TextField\n            name=\"cookTime\"\n            label=\"Cook Time\"\n            value={inputField.cookTime}\n            onBlur={handleChange}\n          />\n        </div>\n        <div className=\"formField\">\n          <TextField\n            name=\"specialTools\"\n            label=\"Special Tools Used in Recipe\"\n            value={inputField.specialTools}\n            onBlur={handleChange}\n          />\n        </div>\n        <div className=\"formField\">\n          {inputIngredient.map((ingredients, index) => (\n            <div key={index}>\n              <TextField\n                name=\"ingredient\"\n                label=\"Ingredient\"\n                value={inputIngredient.ingredient}\n                variant=\"filled\"\n                onChange={(event) => handleChangeInputIngredient(index, event)}\n              />\n              <IconButton onClick={() => ingredientRemoveFields(index)}>\n                <RemoveIcon />\n              </IconButton>\n              <IconButton onClick={() => ingredientAddFields()}>\n                <AddIcon />\n              </IconButton>\n            </div>\n          ))}\n        </div>\n        <div className=\"formField\">\n          {inputInstruction.map((instructions, index) => (\n            <div key={index}>\n              <TextField\n                name=\"instruction\"\n                label=\"Instruction\"\n                value={inputInstruction.instruction}\n                variant=\"filled\"\n                onChange={(event) => handleChangeInputInstruction(index, event)}\n              />\n              <IconButton onClick={() => instructionRemoveFields(index)}>\n                <RemoveIcon />\n              </IconButton>\n              <IconButton onClick={() => instructionAddFields()}>\n                <AddIcon />\n              </IconButton>\n            </div>\n          ))}\n        </div>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={handleSubmit}\n        >\n          Add Recipe\n        </Button>\n      </form>\n    </div>\n  );\n  // }\n\n  // </>\n  // );\n};\n\nexport default NewRecipe;\n","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/utils/queries.js",[],"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/Header/NavLinks.js",[],"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/RecipeCard/RecipeCard.js",[],"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/SideBar/SideBar.js",[],"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/Login/Login.js",[],"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/SignUp/SignUp.js",["88"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n  console.log(\"User data being send to DB\", data)\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n       Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now  {''}\n                {/* <Link to=\"../Home/Home.js\">open your Recipe Box!.</Link> */}\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","/home/jesse/Desktop/Bootcamp/recipe-box/client/src/utils/mutations.js",[],"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/RecipeHeader/RecipeHeader.js",[],"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/RecipeIngredients/RecipeIngredients.js",[],"/home/jesse/Desktop/Bootcamp/recipe-box/client/src/components/RecipeDirections/Recipedirections.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":11,"column":8,"nodeType":"95","messageId":"96","endLine":11,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":24,"column":17,"nodeType":"99","endLine":30,"endColumn":18},{"ruleId":"93","severity":1,"message":"100","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"101","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":16},{"ruleId":"93","severity":1,"message":"102","line":11,"column":10,"nodeType":"95","messageId":"96","endLine":11,"endColumn":30},{"ruleId":"93","severity":1,"message":"103","line":84,"column":23,"nodeType":"95","messageId":"96","endLine":84,"endColumn":28},{"ruleId":"93","severity":1,"message":"104","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'ConstructionOutlined' is defined but never used.","'error' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]